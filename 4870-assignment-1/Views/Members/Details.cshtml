@using Microsoft.AspNetCore.Mvc.TagHelpers
@model DatabaseModelClasses.ViewModels.MemberViewModel

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Member</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
        	@Html.DisplayNameFor(model => model.Id)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Id)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.FirstName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.FirstName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.LastName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.LastName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Email)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Email)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Mobile)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Mobile)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Street)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Street)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.City)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.City)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.PostalCode)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.PostalCode)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Country)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Country)
        </dd>
       <dt class="col-sm-2">
           @Html.DisplayNameFor(model => model.Created)
       </dt>
       <dd class="col-sm-10" id="createdTime">
           @Model.Created.ToString("s")
       </dd>
       <dt class="col-sm-2">
           @Html.DisplayNameFor(model => model.Modified)
       </dt>
       <dd class="col-sm-10" id="modifiedTime">
          @Model.Modified.ToString("s")
       </dd>
        
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.CreatedBy)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.CreatedBy)
        </dd>
        
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.ModifiedBy)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ModifiedBy)
        </dd>
    </dl>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model?.Id">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>

<script>
    var createdTime = document.getElementById('createdTime').innerText + 'Z'; // Append 'Z' to convert to UTC
    var date1 = new Date(createdTime);
    var localDateString1 = date1.toLocaleString('en-US', { year: 'numeric', month: 'long', day: 'numeric', hour: 'numeric', minute: 'numeric', second: 'numeric', hour12: true });
    document.getElementById('createdTime').innerText = localDateString1;

    var modifiedTime = document.getElementById('modifiedTime').innerText + 'Z'; // Append 'Z' to convert to UTC
    var date2 = new Date(modifiedTime);
    var localDateString2 = date2.toLocaleString('en-US', { year: 'numeric', month: 'long', day: 'numeric', hour: 'numeric', minute: 'numeric', second: 'numeric', hour12: true });
    document.getElementById('modifiedTime').innerText = localDateString2;
</script>